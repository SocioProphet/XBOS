// python -m grpc_tools.protoc -I . --python_out=. --grpc_python_out=. indoor_data_historical.proto

syntax = "proto3";

option java_multiple_files = true;

package indoor_data_historical;

// The temperature service definition.
service IndoorDataHistorical {
  // A simple RPC.
  //
  // Sends the outside temperature for a given building, within a duration (start, end), and a requested window
  // An error  is returned if there are no temperature for the given request
  rpc GetRawTemperatures (Request) returns (RawTemperatureReply) {}
  rpc GetRawActions (Request) returns (RawActionReply) {}
  rpc GetRawTemperatureBands (Request) returns (RawTemperatureBandsReply) {}
}

// The request message containing the requested information.
message Request {
  // The name of the building
  string building = 1;
  string zone = 2;

  // The start time in Unixnanoseconds
  int64 start = 3;

  // The end time in Unixnanosecondsf
  int64 end = 4;

  // The frequency/duration window (e.g., 10s, 15m, 1h)
  // Supported units are: d,h,m,s
  string window = 5;

  // Type of data aggregation - RAW, MEAN, MAX...
  string aggregation = 6;
}

// Setpoint are represented as a float per unit (e.g., 45.4 F) starting at a given time
message Setpoint {
  int64 time = 1;
  double temperature_low = 2;
  double temperature_high = 3;
  string unit = 4;
}

// TemperaturePoint are represented as a float per unit (e.g., 45.4 F) starting at a given time
message TemperaturePoint {
  int64 time = 1;
  double temperature = 2;
  string unit = 3;
}

// ActionPoint are represented as a float per unit (e.g., 45.4 F) starting at a given time
message ActionPoint {
  int64 time = 1;
  double action = 2;
}

// The response message containing the temperatures
message RawTemperatureReply {
  repeated TemperaturePoint temperatures = 1;
}

// The response message containing the temperatures
message RawActionReply {
  repeated ActionPoint actions = 1;
}

//The response containing heating and cooling setpoints
message RawTemperatureBandsReply {
  repeated Setpoint setpoints = 1;
}
