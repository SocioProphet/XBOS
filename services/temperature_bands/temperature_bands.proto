// python2.7 -m grpc_tools.protoc -I . --python_out=. --grpc_python_out=. temperature_bands.proto


syntax = "proto3";

option java_multiple_files = true;

package schedules_historical;

// The temperature service definition.
service Schedules {
  // A simple RPC.
  //
  rpc GetComfortband (Request) returns (ScheduleReply) {}
  rpc GetDoNotExceed (Request) returns (ScheduleReply) {}
}

// The request message containing the requested information.
message Request {
  // The name of the building
  string building = 1;
  string zone = 2;

  // The start time in Unixnanoseconds
  int64 start = 3;

  // The end time in Unixnanoseconds
  int64 end = 4;

  // The frequency/duration window (e.g., 10s, 15m, 1h)
  // Supported units are: d,h,m,s
  string window = 5;

  // The temperature unit to return (C, F, K)
  string unit = 6;
}


// SchedulePoint are represented as a float (e.g., 0.3) starting at a given time
message SchedulePoint {
  int64 time = 1;
  double temperature_low = 2;
  double temperature_high = 3;
  string unit = 4;
}


// The response message containing the temperatures
message ScheduleReply {
  repeated SchedulePoint schedules = 1;
}

